#Name David Jin
#April 5, 2023
#Objectives given array [3,4,5]
# add the values separately then all together
# output the operation details and the results to the user
# code in the array
# loading the values into registers
# arithmetic operations
# store the results into registers
# print out the operatsion details 

.data
array: .word 3, 4, 5
plus: .asciiz " + "
eql: .asciiz " = "
newLine: .asciiz "\n"

.text
main:
	#load the address/base address of the array into $s0
	la $s0, array
	
	lw $s1, 0($s0) #getting 3 into $s1
	lw $s2, 4($s0) #getting value 4 into $s2
	lw $s3, 8($s0) #getting 5 into $s3
	
	#print out the values of $s1, 2, 3
	li $v0, 1
	move $a0, $s1
	syscall
	move $a0, $s2
	syscall
	move $a0, $s3
	syscall
	
	li $v0, 4
	la $a0, newLine
	syscall
	
	li $v0, 1
	move $a0, $s1
	syscall
	
	li $v0, 4
	la $a0, plus
	syscall
	
	li $v0, 1
	move $a0, $s2
	syscall
	
	li $v0, 4
	la $a0, eql
	syscall
	
	add $s4, $s1, $s2
	
	li $v0, 1
	move $a0, $s4
	syscall
	
	li $v0, 4
	la $a0, newLine
	syscall
	
	#2nd
	li $v0, 1
	move $a0, $s1
	syscall
	
	li $v0, 4
	la $a0, plus
	syscall
	
	li $v0, 1
	move $a0, $s3
	syscall
	
	li $v0, 4
	la $a0, eql
	syscall
	
	add $s4, $s1, $s3
	
	li $v0, 1
	move $a0, $s4
	syscall
	
	li $v0, 4
	la $a0, newLine
	syscall
	
	#3rd
	li $v0, 1
	move $a0, $s1
	syscall
	
	li $v0, 4
	la $a0, plus
	syscall
	
	li $v0, 1
	move $a0, $s2
	syscall
	
	li $v0, 4
	la $a0, plus
	syscall
	
	li $v0, 1
	move $a0, $s3
	syscall
	
	li $v0, 4
	la $a0, eql
	syscall
	
	add $s4, $s1, $s2
	add $s4, $s4, $s3
	
	li $v0, 1
	move $a0, $s4
	syscall
	
exit:
	li $v0, 10
	syscall
